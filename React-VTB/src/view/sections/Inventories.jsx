import React, { useState } from "react";
import "./Inventories.css";

const Inventories = () => {
  const inventories = [
    {
      id: 1,
      name: "–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è Q1 2024",
      region: "–ì–æ–ª–æ–≤–Ω–æ–π –æ—Ñ–∏—Å",
      progress: 75,
      status: "active",
      startDate: "15.01.2024",
      endDate: "15.02.2024",
      totalAssets: 156,
      completedAssets: 117,
      responsible: "–ò–≤–∞–Ω–æ–≤ –ê.–í.",
    },
    {
      id: 2,
      name: "–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è Q1 2024",
      region: "–†–µ–≥–∏–æ–Ω –°–µ–≤–µ—Ä",
      progress: 45,
      status: "active",
      startDate: "15.01.2024",
      endDate: "20.02.2024",
      totalAssets: 89,
      completedAssets: 40,
      responsible: "–ü–µ—Ç—Ä–æ–≤–∞ –°.–ò.",
    },
    {
      id: 3,
      name: "–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è Q4 2023",
      region: "–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã",
      progress: 100,
      status: "completed",
      startDate: "01.10.2023",
      endDate: "15.12.2023",
      totalAssets: 245,
      completedAssets: 245,
      responsible: "–°–∏–¥–æ—Ä–æ–≤ –ü.–ö.",
    },
    {
      id: 4,
      name: "–í–Ω–µ–ø–ª–∞–Ω–æ–≤–∞—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è",
      region: "–û—Ç–¥–µ–ª IT",
      progress: 30,
      status: "active",
      startDate: "10.01.2024",
      endDate: "31.01.2024",
      totalAssets: 67,
      completedAssets: 20,
      responsible: "–ö–æ–∑–ª–æ–≤ –î.–ú.",
    },
  ];

  const [filter, setFilter] = useState("all");

  const filteredInventories = inventories.filter((inv) => {
    if (filter === "all") return true;
    if (filter === "active") return inv.status === "active";
    if (filter === "completed") return inv.status === "completed";
    return true;
  });

  const getStatusIcon = (status) => {
    return status === "active" ? "üü¢" : "‚úÖ";
  };

  const getProgressColor = (progress) => {
    if (progress === 100) return "#10b981";
    if (progress >= 70) return "#0047BB";
    if (progress >= 40) return "#f59e0b";
    return "#ef4444";
  };

  return (
    <div className="inventories">
      <div className="inventories-header">
        <h1>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è–º–∏</h1>
        <button className="btn btn-primary">
          <span className="btn-icon">‚ûï</span>
          –ù–æ–≤–∞—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è
        </button>
      </div>

      <div className="inventories-filters">
        <div className="filter-group">
          <label>–°—Ç–∞—Ç—É—Å:</label>
          <select
            className="filter-select"
            value={filter}
            onChange={(e) => setFilter(e.target.value)}
          >
            <option value="all">–í—Å–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏</option>
            <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
            <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ</option>
          </select>
        </div>
        <div className="filter-group">
          <label>–†–µ–≥–∏–æ–Ω:</label>
          <select className="filter-select">
            <option>–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã</option>
            <option>–ì–æ–ª–æ–≤–Ω–æ–π –æ—Ñ–∏—Å</option>
            <option>–†–µ–≥–∏–æ–Ω –°–µ–≤–µ—Ä</option>
            <option>–†–µ–≥–∏–æ–Ω –Æ–≥</option>
          </select>
        </div>
        <div className="filter-stats">
          <div className="stat">
            <span className="stat-value">{inventories.length}</span>
            <span className="stat-label">–≤—Å–µ–≥–æ</span>
          </div>
          <div className="stat">
            <span className="stat-value">
              {inventories.filter((inv) => inv.status === "active").length}
            </span>
            <span className="stat-label">–∞–∫—Ç–∏–≤–Ω—ã—Ö</span>
          </div>
        </div>
      </div>

      <div className="inventories-grid">
        {filteredInventories.map((inv) => (
          <div key={inv.id} className={`inventory-card status-${inv.status}`}>
            <div className="card-header">
              <div className="card-title">
                <span className="status-icon">{getStatusIcon(inv.status)}</span>
                <h3>{inv.name}</h3>
              </div>
              <span className={`status-badge status-${inv.status}`}>
                {inv.status === "active" ? "–ê–∫—Ç–∏–≤–Ω–∞—è" : "–ó–∞–≤–µ—Ä—à–µ–Ω–∞"}
              </span>
            </div>

            <div className="card-details">
              <div className="detail-row">
                <span className="detail-label">–†–µ–≥–∏–æ–Ω:</span>
                <span className="detail-value">{inv.region}</span>
              </div>
              <div className="detail-row">
                <span className="detail-label">–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:</span>
                <span className="detail-value">{inv.responsible}</span>
              </div>
              <div className="detail-row">
                <span className="detail-label">–ü–µ—Ä–∏–æ–¥:</span>
                <span className="detail-value">
                  {inv.startDate} - {inv.endDate}
                </span>
              </div>
              <div className="detail-row">
                <span className="detail-label">–ê–∫—Ç–∏–≤—ã:</span>
                <span className="detail-value">
                  {inv.completedAssets}/{inv.totalAssets}
                </span>
              </div>
            </div>

            <div className="progress-section">
              <div className="progress-info">
                <span className="progress-label">–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</span>
                <span className="progress-value">{inv.progress}%</span>
              </div>
              <div className="progress-bar">
                <div
                  className="progress-fill"
                  style={{
                    width: `${inv.progress}%`,
                    backgroundColor: getProgressColor(inv.progress),
                  }}
                ></div>
              </div>
            </div>

            <div className="card-actions">
              <button className="btn btn-primary">
                <span className="btn-icon">‚öôÔ∏è</span>
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
              </button>
              <button className="btn btn-secondary">
                <span className="btn-icon">üìä</span>
                –û—Ç—á–µ—Ç
              </button>
              {inv.status === "active" && (
                <button className="btn btn-outline">
                  <span className="btn-icon">‚è∏Ô∏è</span>
                  –ü–∞—É–∑–∞
                </button>
              )}
            </div>
          </div>
        ))}
      </div>

      {filteredInventories.length === 0 && (
        <div className="empty-state">
          <div className="empty-icon">üì¶</div>
          <h3>–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞</p>
          <button className="btn btn-primary" onClick={() => setFilter("all")}>
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        </div>
      )}
    </div>
  );
};

export default Inventories;
