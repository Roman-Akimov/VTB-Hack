import React, { useState } from "react";
import "./Questionnaires.css";

const Questionnaires = ({ onSelectQuestionnaire }) => {
  const [searchTerm, setSearchTerm] = useState("");
  const [statusFilter, setStatusFilter] = useState("all");

  const questionnaires = [
    {
      id: 1,
      mol: "–ò–≤–∞–Ω–æ–≤ –ò.–ò.",
      department: "–û—Ç–¥–µ–ª IT",
      asset: "–ù–æ—É—Ç–±—É–∫ Dell XPS 13",
      serialNumber: "SN-DELL-12345",
      status: "pending",
      date: "2024-01-15",
      priority: "medium",
      lastAction: "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É",
    },
    {
      id: 2,
      mol: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.",
      department: "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è",
      asset: "–ú–æ–Ω–∏—Ç–æ—Ä Samsung LC27",
      serialNumber: "SN-SAMS-67890",
      status: "needs_correction",
      date: "2024-01-15",
      priority: "high",
      lastAction: "–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–æ–∫: –Ω–µ—á–µ—Ç–∫–æ–µ —Ñ–æ—Ç–æ",
    },
    {
      id: 3,
      mol: "–°–∏–¥–æ—Ä–æ–≤ –°.–°.",
      department: "–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤",
      asset: "–ü—Ä–∏–Ω—Ç–µ—Ä HP LaserJet",
      serialNumber: "SN-HP-54321",
      status: "approved",
      date: "2024-01-14",
      priority: "low",
      lastAction: "–ü—Ä–∏–Ω—è—Ç–∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–µ–π",
    },
    {
      id: 4,
      mol: "–ö–æ–∑–ª–æ–≤–∞ –ê.–ú.",
      department: "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª",
      asset: "–°–∫–∞–Ω–µ—Ä Canon",
      serialNumber: "SN-CAN-98765",
      status: "pending",
      date: "2024-01-14",
      priority: "medium",
      lastAction: "–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏",
    },
  ];

  const getStatusBadge = (status) => {
    const statuses = {
      pending: { label: "–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ", class: "status-pending", icon: "‚è≥" },
      needs_correction: {
        label: "–ü—Ä–∞–≤–∫–∏",
        class: "status-correction",
        icon: "‚ö†Ô∏è",
      },
      approved: { label: "–ü—Ä–∏–Ω—è—Ç–æ", class: "status-approved", icon: "‚úÖ" },
    };
    const statusInfo = statuses[status];
    return (
      <span className={`status-badge ${statusInfo.class}`}>
        <span className="status-icon">{statusInfo.icon}</span>
        {statusInfo.label}
      </span>
    );
  };

  const getPriorityIcon = (priority) => {
    const icons = {
      high: "üî¥",
      medium: "üü°",
      low: "üü¢",
    };
    return icons[priority] || "‚ö™";
  };

  const filteredQuestionnaires = questionnaires.filter((q) => {
    const matchesSearch =
      q.mol.toLowerCase().includes(searchTerm.toLowerCase()) ||
      q.asset.toLowerCase().includes(searchTerm.toLowerCase()) ||
      q.serialNumber.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesStatus = statusFilter === "all" || q.status === statusFilter;
    return matchesSearch && matchesStatus;
  });

  const statusCounts = questionnaires.reduce((acc, q) => {
    acc[q.status] = (acc[q.status] || 0) + 1;
    return acc;
  }, {});

  return (
    <div className="questionnaires">
      <div className="questionnaires-header">
        <h1>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç–∞–º–∏</h1>
        <div className="header-actions">
          <button className="btn btn-primary">
            <span className="btn-icon">üì•</span>
            –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
          </button>
          <button className="btn btn-secondary">
            <span className="btn-icon">üîÑ</span>
            –û–±–Ω–æ–≤–∏—Ç—å
          </button>
        </div>
      </div>

      <div className="questionnaires-stats">
        <div className="stat-card">
          <div className="stat-icon">üìã</div>
          <div className="stat-content">
            <div className="stat-value">{questionnaires.length}</div>
            <div className="stat-label">–í—Å–µ–≥–æ –∞–Ω–∫–µ—Ç</div>
          </div>
        </div>
        <div className="stat-card">
          <div className="stat-icon">‚è≥</div>
          <div className="stat-content">
            <div className="stat-value">{statusCounts.pending || 0}</div>
            <div className="stat-label">–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ</div>
          </div>
        </div>
        <div className="stat-card">
          <div className="stat-icon">‚ö†Ô∏è</div>
          <div className="stat-content">
            <div className="stat-value">
              {statusCounts.needs_correction || 0}
            </div>
            <div className="stat-label">–¢—Ä–µ–±—É—é—Ç –ø—Ä–∞–≤–æ–∫</div>
          </div>
        </div>
        <div className="stat-card">
          <div className="stat-icon">‚úÖ</div>
          <div className="stat-content">
            <div className="stat-value">{statusCounts.approved || 0}</div>
            <div className="stat-label">–ü—Ä–∏–Ω—è—Ç–æ</div>
          </div>
        </div>
      </div>

      <div className="questionnaires-filters">
        <div className="search-group">
          <div className="search-input-wrapper">
            <span className="search-icon">üîç</span>
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –ú–û–õ, –∞–∫—Ç–∏–≤—É –∏–ª–∏ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É..."
              className="search-input"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
            {searchTerm && (
              <button
                className="clear-search"
                onClick={() => setSearchTerm("")}
              >
                ‚úï
              </button>
            )}
          </div>
        </div>

        <div className="filter-group">
          <label>–°—Ç–∞—Ç—É—Å:</label>
          <select
            className="filter-select"
            value={statusFilter}
            onChange={(e) => setStatusFilter(e.target.value)}
          >
            <option value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
            <option value="pending">–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ</option>
            <option value="needs_correction">–¢—Ä–µ–±—É—é—Ç –ø—Ä–∞–≤–æ–∫</option>
            <option value="approved">–ü—Ä–∏–Ω—è—Ç–æ</option>
          </select>
        </div>

        <div className="filter-group">
          <label>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</label>
          <select className="filter-select">
            <option>–ü–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ)</option>
            <option>–ü–æ –¥–∞—Ç–µ (—Å—Ç–∞—Ä—ã–µ)</option>
            <option>–ü–æ –ú–û–õ (–ê-–Ø)</option>
            <option>–ü–æ –∞–∫—Ç–∏–≤—É (–ê-–Ø)</option>
          </select>
        </div>
      </div>

      <div className="questionnaires-content">
        <div className="questionnaires-list">
          {filteredQuestionnaires.map((q) => (
            <div
              key={q.id}
              className={`questionnaire-card status-${q.status}`}
              onClick={() => onSelectQuestionnaire(q)}
            >
              <div className="card-header">
                <div className="card-title">
                  <span className="priority-icon">
                    {getPriorityIcon(q.priority)}
                  </span>
                  <h3>–ê–Ω–∫–µ—Ç–∞ #{q.id}</h3>
                  <span className="asset-name">{q.asset}</span>
                </div>
                {getStatusBadge(q.status)}
              </div>

              <div className="card-details">
                <div className="detail-row">
                  <span className="detail-label">–ú–û–õ:</span>
                  <span className="detail-value">{q.mol}</span>
                </div>
                <div className="detail-row">
                  <span className="detail-label">–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:</span>
                  <span className="detail-value">{q.department}</span>
                </div>
                <div className="detail-row">
                  <span className="detail-label">–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä:</span>
                  <span className="detail-value serial-number">
                    {q.serialNumber}
                  </span>
                </div>
                <div className="detail-row">
                  <span className="detail-label">–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:</span>
                  <span className="detail-value">{q.date}</span>
                </div>
                <div className="detail-row">
                  <span className="detail-label">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:</span>
                  <span className="detail-value action-text">
                    {q.lastAction}
                  </span>
                </div>
              </div>

              <div className="card-actions">
                <button className="btn btn-primary">
                  <span className="btn-icon">üëÅÔ∏è</span>
                  –ü—Ä–æ—Å–º–æ—Ç—Ä
                </button>
                <button className="btn btn-secondary">
                  <span className="btn-icon">üì•</span>
                  –°–∫–∞—á–∞—Ç—å
                </button>
                {q.status === "needs_correction" && (
                  <button className="btn btn-warning">
                    <span className="btn-icon">‚úèÔ∏è</span>
                    –ò—Å–ø—Ä–∞–≤–∏—Ç—å
                  </button>
                )}
              </div>
            </div>
          ))}
        </div>

        {filteredQuestionnaires.length === 0 && (
          <div className="empty-state">
            <div className="empty-icon">üìã</div>
            <h3>–ê–Ω–∫–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏</p>
            <button
              className="btn btn-primary"
              onClick={() => {
                setSearchTerm("");
                setStatusFilter("all");
              }}
            >
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

export default Questionnaires;
