import React, { useState } from "react";
import "./Settings.css";

const Settings = () => {
  const [notifications, setNotifications] = useState({
    newQuestionnaires: true,
    corrections: true,
    reports: false,
    deadlines: true,
  });

  const [exportFormat, setExportFormat] = useState("excel");

  const handleNotificationChange = (key) => {
    setNotifications((prev) => ({
      ...prev,
      [key]: !prev[key],
    }));
  };

  return (
    <div className="settings">
      <div className="settings-header">
        <h1>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h1>
        <div className="settings-actions">
          <button className="btn btn-secondary">–°–±—Ä–æ—Å–∏—Ç—å</button>
          <button className="btn btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        </div>
      </div>

      <div className="settings-grid">
        <div className="settings-card">
          <div className="card-header">
            <div className="card-icon">üîî</div>
            <h3>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
          </div>
          <div className="settings-list">
            <div className="setting-item">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={notifications.newQuestionnaires}
                  onChange={() => handleNotificationChange("newQuestionnaires")}
                />
                <span className="checkmark"></span>
                –ù–æ–≤—ã–µ –∞–Ω–∫–µ—Ç—ã
              </label>
            </div>
            <div className="setting-item">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={notifications.corrections}
                  onChange={() => handleNotificationChange("corrections")}
                />
                <span className="checkmark"></span>
                –¢—Ä–µ–±—É—é—Ç –ø—Ä–∞–≤–æ–∫
              </label>
            </div>
            <div className="setting-item">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={notifications.reports}
                  onChange={() => handleNotificationChange("reports")}
                />
                <span className="checkmark"></span>
                –ì–æ—Ç–æ–≤—ã –æ—Ç—á–µ—Ç—ã
              </label>
            </div>
            <div className="setting-item">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={notifications.deadlines}
                  onChange={() => handleNotificationChange("deadlines")}
                />
                <span className="checkmark"></span>
                –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å—Ä–æ–∫–∞—Ö
              </label>
            </div>
          </div>
        </div>

        <div className="settings-card">
          <div className="card-header">
            <div className="card-icon">üì§</div>
            <h3>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</h3>
          </div>
          <div className="settings-list">
            <div className="setting-item">
              <label>–§–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</label>
              <select
                value={exportFormat}
                onChange={(e) => setExportFormat(e.target.value)}
                className="format-select"
              >
                <option value="excel">Excel (.xlsx)</option>
                <option value="pdf">PDF (.pdf)</option>
                <option value="csv">CSV (.csv)</option>
              </select>
            </div>
            <div className="setting-item">
              <label className="checkbox-label">
                <input type="checkbox" defaultChecked />
                <span className="checkmark"></span>
                –í–∫–ª—é—á–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
              </label>
            </div>
          </div>
        </div>

        <div className="settings-card">
          <div className="card-header">
            <div className="card-icon">üîó</div>
            <h3>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h3>
          </div>
          <div className="integration-list">
            <div className="integration-item">
              <div className="integration-info">
                <div className="integration-name">1C:–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è</div>
                <div className="integration-status">–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ</div>
              </div>
              <button className="btn btn-outline">–ù–∞—Å—Ç—Ä–æ–∏—Ç—å</button>
            </div>
            <div className="integration-item">
              <div className="integration-info">
                <div className="integration-name">SAP ERP</div>
                <div className="integration-status">–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ</div>
              </div>
              <button className="btn btn-outline">–ù–∞—Å—Ç—Ä–æ–∏—Ç—å</button>
            </div>
          </div>
        </div>

        <div className="settings-card">
          <div className="card-header">
            <div className="card-icon">üë•</div>
            <h3>–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞</h3>
          </div>
          <div className="settings-list">
            <div className="setting-item">
              <div className="role-info">
                <div className="role-name">–ë—É—Ö–≥–∞–ª—Ç–µ—Ä</div>
                <div className="role-desc">–ü—Ä–æ—Å–º–æ—Ç—Ä, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∫–µ—Ç</div>
              </div>
            </div>
            <div className="setting-item">
              <div className="role-info">
                <div className="role-name">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</div>
                <div className="role-desc">–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Settings;
